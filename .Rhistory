install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
anorexie <- read.table(file="DonneesAnorexie.txt", header=TRUE)
install.packages(c("repre","IRdisplay","evaluate","crayon","pbdZMQ"))
install.packages(c("devtools","uuid","digest"))
devtools::install_github("IRkerner/IRkernel")
devtools::install_github("IRkernel/IRkernel")
IRkernel::installspec()
q()
knitr::opts_chunk$set(fig.align = 'center',fig.pos = 'h')
#position par dÃ©faut des figures dans le pdf : centrÃ©es et Ã  l'endroit oÃ¹ on les construit
library(magrittr) #pour utiliser l'opÃ©rateur pipe %>%
knitr::opts_chunk$set(fig.align = 'center',fig.pos = 'h')
#position par dÃ©faut des figures dans le pdf : centrÃ©es et Ã  l'endroit oÃ¹ on les construit
library(magrittr) #pour utiliser l'opÃ©rateur pipe %>%
anorex <- read.table(file = 'DonneesAnorexie.txt', header = T)
anorex[, 2:3] <- anorex[, 2:3] * 0.453
anorex_cbt <- anorex[anorex$trait == 'CBT',]
anorex_ft <- anorex[anorex$trait == 'FT',]
anorex_cont <- anorex[anorex$trait == 'Cont',]
knitr::opts_chunk$set(fig.align = 'center',fig.pos = 'h')
#position par dÃ©faut des figures dans le pdf : centrÃ©es et Ã  l'endroit oÃ¹ on les construit
library(magrittr) #pour utiliser l'opÃ©rateur pipe %>%
anorex <- read.table(file = 'DonneesAnorexie.txt', header = T)
anorex[, 2:3] <- anorex[, 2:3] * 0.453
anorex_cbt <- anorex[anorex$trait == 'CBT',]
anorex_ft <- anorex[anorex$trait == 'FT',]
anorex_cont <- anorex[anorex$trait == 'Cont',]
rbind(anorex_cbt[1:2,], anorex_ft[1:2,], anorex_cont[1:2,])
summary(anorex$trait)
boxplot(pre~trait, data = anorex)
y <- c(mean(anorex_cbt$pre), mean(anorex_ft$pre), mean(anorex_cont$pre))
names(y) = c("CBT", "FT", "Contrôle")
y
anorex$var <- anorex$post - anorex$pre
evol_cont <- anorex[anorex$trait == 'Cont', 4]
summary(evol_cont)
plot(evol_cont[evol_cont >= 0], col = 'green', ylim = c(-10,15), pch = 5, ylab = "Evolution du poids")
points(evol_cont[evol_cont < 0], col = 'blue', pch = 4)
abline(h=0, col = 'red')
legend(2,15,c('Prise de masse','Perte de masse'),col=c('green','blue'), pch=c(5,4))
evol_ft <- anorex[anorex$trait == 'FT', 4]
evol_cbt <- anorex[anorex$trait == 'CBT', 4]
x = c(mean(evol_ft), mean(evol_cbt))
y = c(sd(evol_ft), sd(evol_cbt))
names(x) = c("Groupe FT", "Groupe CBT")
names(y) = c("Groupe FT", "Groupe CBT")
x
y
boxplot(evol_ft, evol_cbt, names = c('Thérapie familiale', 'CBT'))
df <- anorex[(anorex$trait == 'CBT') | (anorex$trait == 'FT'), c(1,4)]
hist(df[df[,1] == 'CBT',2], col=rgb(1, 0, 0, 0.5), main = "Histogramme de l'évolution du poids", xlab = "Évolution du poids")
hist(df[df[,1] == 'FT',2], col=rgb(0, 1, 0, 0.5), add = T)
legend(-5,10,c('CBT', 'FT'), fill= c('red','green'))
n1 = sum(evol_ft >= 1)/length(evol_ft) * 100
n2 = sum(evol_cbt >= 1)/length(evol_cbt) * 100
y = c(n1,n2)
names(y) = c('FT', 'CBT')
"Pourcentage de patients ayant pris plus d'un kilo :"
y
par(mfrow = c(2,2))
hist(anorex_cbt$pre, freq = F, main = "Histogramme poids avant traitement")
curve(dnorm(x, mean(anorex_cbt$pre), sd(anorex_cbt$pre)), add = T)
Fn = ecdf(anorex_cbt$pre)
plot(Fn, main = "Répartition empirique et théorique")
curve(pnorm(x, mean(anorex_cbt$pre), sd(anorex_cbt$pre)), add = T, col='blue')
data_std1 <- (anorex_cbt$pre - mean(anorex_cbt$pre)) / sd(anorex_cbt$pre)
qqnorm(data_std1)
abline(0,1,col='red')
ks.test(x = data_std1, y = "pnorm")
par(mfrow = c(2,2))
hist(anorex_cbt$post, freq = F, main = "Histogramme poids après traitement")
curve(dnorm(x, mean(anorex_cbt$post), sd(anorex_cbt$post)), add = T)
Fn = ecdf(anorex_cbt$post)
plot(Fn, main = "Répartition empirique et théorique")
curve(pnorm(x, mean(anorex_cbt$post), sd(anorex_cbt$post)), add = T, col='blue')
data_std2 <- (anorex_cbt$post - mean(anorex_cbt$post)) / sd(anorex_cbt$post)
qqnorm(data_std2)
abline(0,1,col='red')
ks.test(x = data_std2, y = "pnorm")
par(mfrow = c(2,2))
hist(evol_cbt, freq = F, main = "Histogramme évolution du poids")
curve(dnorm(x, mean(evol_cbt), sd(evol_cbt)), add = T)
Fn = ecdf(evol_cbt)
plot(Fn, main = "Répartition empirique et théorique")
curve(pnorm(x, mean(evol_cbt), sd(evol_cbt)), add = T, col='blue')
data_std3 <- (evol_cbt - mean(evol_cbt)) / sd(evol_cbt)
qqnorm(data_std3)
abline(0,1,col='red')
ks.test(x = data_std3, y = "pnorm")
par(mfrow = c(2,2))
hist(anorex_ft$pre, freq = F, main = "Histogramme poids avant traitement")
curve(dnorm(x, mean(anorex_ft$pre), sd(anorex_ft$pre)), add = T)
Fn = ecdf(anorex_ft$pre)
plot(Fn, main = "Répartition empirique et théorique")
curve(pnorm(x, mean(anorex_ft$pre), sd(anorex_ft$pre)), add = T, col='blue')
data_std4 <- (anorex_ft$pre - mean(anorex_ft$pre)) / sd(anorex_ft$pre)
qqnorm(data_std4)
abline(0,1,col='red')
ks.test(x = data_std4, y = "pnorm")
par(mfrow = c(2,2))
hist(anorex_ft$post, freq = F, main = "Histogramme poids après traitement")
curve(dnorm(x, mean(anorex_ft$post), sd(anorex_ft$post)), add = T)
Fn = ecdf(anorex_ft$post)
plot(Fn, main = "Répartition empirique et théorique")
curve(pnorm(x, mean(anorex_ft$post), sd(anorex_ft$post)), add = T, col='blue')
data_std5 <- (anorex_ft$post - mean(anorex_ft$post)) / sd(anorex_ft$post)
qqnorm(data_std5)
abline(0,1,col='red')
ks.test(x = data_std5, y = "pnorm")
par(mfrow = c(2,2))
hist(evol_ft, freq = F, main = "Histogramme évolution du poids")
curve(dnorm(x, mean(evol_ft), sd(evol_ft)), add = T)
Fn = ecdf(evol_ft)
plot(Fn, main = "Répartition empirique et théorique")
curve(pnorm(x, mean(evol_ft), sd(evol_ft)), add = T, col='blue')
data_std6 <- (evol_ft - mean(evol_ft)) / sd(evol_ft)
qqnorm(data_std6)
abline(0,1,col='red')
ks.test(x = data_std6, y = "pnorm")
par(mfrow = c(2,2))
hist(anorex_cont$pre, freq = F, main = "Histogramme poids avant traitement")
curve(dnorm(x, mean(anorex_cont$pre), sd(anorex_cont$pre)), add = T)
Fn = ecdf(anorex_cont$pre)
plot(Fn, main = "Répartition empirique et théorique")
curve(pnorm(x, mean(anorex_cont$pre), sd(anorex_cont$pre)), add = T, col='blue')
data_std7 <- (anorex_cont$pre - mean(anorex_cont$pre)) / sd(anorex_cont$pre)
qqnorm(data_std7)
abline(0,1,col='red')
ks.test(x = data_std7, y = "pnorm")
par(mfrow = c(2,2))
hist(anorex_cont$post, freq = F, main = "Histogramme poids après traitement")
curve(dnorm(x, mean(anorex_cont$post), sd(anorex_cont$post)), add = T)
Fn = ecdf(anorex_cont$post)
plot(Fn, main = "Répartition empirique et théorique")
curve(pnorm(x, mean(anorex_cont$post), sd(anorex_cont$post)), add = T, col='blue')
data_std8 <- (anorex_cont$post - mean(anorex_cont$post)) / sd(anorex_cont$post)
qqnorm(data_std8)
abline(0,1,col='red')
ks.test(x = data_std8, y = "pnorm")
par(mfrow = c(2,2))
hist(evol_cont, freq = F, main = "Histogramme évolution du poids")
curve(dnorm(x, mean(evol_cont), sd(evol_cont)), add = T)
Fn = ecdf(evol_cont)
plot(Fn, main = "Répartition empirique et théorique")
curve(pnorm(x, mean(evol_cont), sd(evol_cont)), add = T, col='blue')
data_std9 <- (evol_cont - mean(evol_cont)) / sd(evol_cont)
qqnorm(data_std9)
abline(0,1,col='red')
ks.test(x = data_std9, y = "pnorm")
c(mean(evol_cbt), sd(evol_cbt))
c(mean(evol_ft), sd(evol_ft))
c(mean(evol_cont), sd(evol_cont))
par(mfrow = c(1, 1))
curve(dnorm(x, mean(evol_cbt), sd(evol_cbt)), xlim = c(-10,13), ylab = 'Densités théoriques', col = 'green')
curve(dnorm(x, mean(evol_ft), sd(evol_ft)), xlim = c(-10,13), add=T, col='red')
curve(dnorm(x, mean(evol_cont), sd(evol_cont)), xlim = c(-10,13), add = T, col='blue')
legend(-10, 0.12, c('CBT','FT','Cont'), fill = c('green', 'red', 'blue'))
knitr::opts_chunk$set(fig.align = 'center',fig.pos = 'h')
#position par dÃ©faut des figures dans le pdf : centrÃ©es et Ã  l'endroit oÃ¹ on les construit
library(magrittr) #pour utiliser l'opÃ©rateur pipe %>%
anorex <- read.table(file = 'DonneesAnorexie.txt', header = T)
anorex[, 2:3] <- anorex[, 2:3] * 0.453
anorex_cbt <- anorex[anorex$trait == 'CBT',]
anorex_ft <- anorex[anorex$trait == 'FT',]
anorex_cont <- anorex[anorex$trait == 'Cont',]
rbind(anorex_cbt[1:2,], anorex_ft[1:2,], anorex_cont[1:2,])
print(mean(chi_deux), mean(rnorm((k, 10, sqrt(1)))))
print(mean(chi_deux) mean(rnorm((k, 10, sqrt(1)))))
print(mean(chi_deux); mean(rnorm((k, 10, sqrt(1)))))
print(mean(chi_deux), mean(rnorm((k, 10, sqrt(1)))))
print(mean(rnorm((k, 10, sqrt(1)))))
print(mean(rnorm(k, mean = 10, sd = sqrt(1))))
# 3.1
k_list <- c(1, 10, 100, 1000)
for (k in k_list) {
chi_deux <- rchisq(1000, k)
print(mean(chi_deux))
print(mean(rnorm(k, mean = 10, sd = sqrt(1))))
}
# 3.1
k_list <- c(1, 10, 100, 1000)
for (k in k_list) {
chi_deux <- rchisq(1000, k)
print(mean(chi_deux))
print(mean(rnorm(k, mean = k, sd = sqrt(2*k))))
}
#print(mean(rnorm(k, mean = k, sd = sqrt(2*k))))
}
#print(mean(rnorm(k, mean = k, sd = sqrt(2*k))))
}
#3.2
for (k in k_list) {
chi_deux <- rchisq(1000, k)
print(var(chi_deux))
#print(mean(rnorm(k, mean = k, sd = sqrt(2*k))))
}
# 3.1
k_list <- c(1, 10, 100, 1000)
for (k in k_list) {
chi_deux <- rchisq(1000, k)
print(mean(chi_deux))
}
#3.2
for (k in k_list) {
chi_deux <- rchisq(1000, k)
print(var(chi_deux))
}
install.packages(available.packages()[,1])
install.packages(available.packages()[, 1])
install.packages(available.packages()[, 1])
install.packages(available.packages()[, 1])
install.packages(available.packages()[, 1])
install.packages(available.packages()[, 1])
install.packages(available.packages())
install.packages(available.packages())
install.packages(available.packages())
install.packages(available.packages()[, 1])
install.packages(available.packages()[, 1])
install.packages(available.packages()[, 1])
install.packages(available.packages()[, 1])
install.packages(c("aws", "effects", "esreg", "HEMDAG", "iq", "live", "MultNonParam", "OncoBayes2", "tbrf"))
install.packages(c("rmarkdown", "bookdown", "kableExtra", "FactoMineR"))
install.packages(c("rmarkdown", "bookdown", "kableExtra", "FactoMineR"))
install.packages(c("rmarkdown", "bookdown", "kableExtra", "FactoMineR"))
install.packages(c("rmarkdown", "bookdown", "kableExtra", "FactoMineR"))
install.packages("kableExtra")
install.packages("kableExtra")
install.packages("kableExtra")
install.packages('kableExtra', repos='https://cloud.r-project.org/')
install.packages("hms")
library("abind", lib.loc="~/anaconda3/envs/rstudio-1.1.456/lib/R/library")
detach("package:abind", unload=TRUE)
install.packages("kableExtra", dependencies = TRUE)
install.packages("kableExtra")
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "evaluate", "haven", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "R6", "Rcpp", "RJSONIO", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages("kableExtra")
install.packages("ps")
installed.packages()
# create a list of all installed packages
ip <- as.data.frame(installed.packages())
head(ip)
# if you use MRO, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("MRO", ip$LibPath))
# we don't want to remove base or recommended packages either\
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
# determine the library where the packages are installed
path.lib <- unique(ip$LibPath)
path.lib
path
library(ANOM)
library(anomalize)
library(anomaly)
library(anominate)
install.packages(c("FactoMineR", "knitr", "magrittr"))
install.packages("kableExtra")
install.packages("bookdown")
# ggplot du prix en euro de la voiture
ggplot(df, aes(y = price_eur)) + geom_boxplot() + ggtitle('Prix en euro')
# boxplot de price_eur
boxplot_price_eur <- ggplot(data = df, aes(y = price_eur)) + geom_boxplot()
y = rbern(n, delta)
install.packages('Rlab')
y = rbern(n, delta)
# exo 3
N = 100000
n = 500
# 40% de personne dans la population total pense que oui
delta = 0.4
y = rbern(n, delta)
library(rlab)
library(Rlab)
y = rbern(n, delta)
cumsum(y/1:n)
res = cumsum(y/1:n)
res = cumsum(y/n)
cumsum(y/n)
cumsum(y)/1:n
plot(1:n, res)
plot(1:n, res, '-')
plot(1:n, res, 'x')
plot(res)
res = cumsum(y)/1:n
plot(res)
line(delta)
abline(0.4)
abline(0.4, 0)
poisson <- read.csv("PoissonsAcidification.csv", header = FALSE)
setwd("Documents/SU 2022 - 2023/ADD/Projets/")
poisson <- read.csv("PoissonsAcidification.csv", header = FALSE)
View(poisson)
dim(poisson)
poisson <- read.table("PoissonsAcidification.csv", header = FALSE)
View(poisson)
poisson <- read.table("PoissonsAcidification.csv", sep = ";", header = T)
View(poisson)
summary(poisson)
x <- read.table("Rossignol.csv", sep = ";", header = T)
summary(x)
View(x)
View(x)
View(x)
View(x)
View(x)
View(x)
View(x)
hist(x$annee.m)
x$annee.m = as.numeric(x$annee.m)
hist(x$annee.m)
View(x)
View(x)
knitr::opts_chunk$set(echo = TRUE)
ross = read.table("Rossignol.csv", sep = ";", header = T)
summary(ross)
plot(pressure)
---
title: "projet_rossignol"
View(ross)
ross = read.table("Rossignol.csv", sep = ";", header = T)
ross$annee.m = lapply(ross$annee.m, function(x) {gsub(",", ".", x)})
ross$annee.m = as.numeric(ross$annee.m)
head(ross)
library(tidyverse)
library(tidyverse)
ross <- read.table("Rossignol.csv", sep = ";", header = T)
ross %>% select(-sexe.m)
View(ross)
View(ross)
ross <- lapply(ross, function(x) {gsub(",", ".", x)})
View(ross)
View(ross)
ross <- as.numeric(ross)
library(tidyverse)
ross <- read.table("Rossignol.csv", sep = ";", header = T)
ross %>% select(-sexe.m)
View(ross)
View(ross)
ross <- data.frame(lapply(ross, function(x) {gsub(",", ".", x)}))
ross <- as.numeric(ross)
View(ross)
summary(ross)
ross <- as.numeric(ross)
ross$c(-3) <- as.numeric(ross)
View(x)
View(ross)
ross %>% mutate_if(is.character, as.numeric)
ross[,-3] <- sapply(ross[,-3],as.numeric)
View(x)
View(ross)
ross[,-1,-3] <- sapply(ross[,-1,-3],as.numeric)
View(ross)
ross <- read.table("Rossignol.csv", sep = ";", header = T)
View(ross)
ross %>% select(-Individus.m,-sexe.m)
ross <- data.frame(lapply(ross, function(x) {gsub(",", ".", x)}))
ross[,-1,-3] <- sapply(ross[,-1,-3],as.numeric)
View(ross)
ross <- ross %>% mutate_at(c(,-1,-3), as.numeric)
ross <- ross %>% mutate_at(c(-1,-3), as.numeric)
View(ross)
View(ross)
summary(ross)
is.na(ross)
ross[is.na(ross)]
